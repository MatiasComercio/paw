CREATE TABLE IF NOT EXISTS users (
	dni INTEGER NOT NULL ,
	first_name VARCHAR (50) NOT NULL,
	last_name VARCHAR (50) NOT NULL,
	genre CHAR (1) ,
	birthday DATE ,
	email VARCHAR(100) NOT NULL,

	PRIMARY KEY (dni),
	UNIQUE (email),
	CHECK (dni > 0),
	CHECK (birthday <= current_timestamp)
);

CREATE TABLE IF NOT EXISTS address (
	dni INTEGER NOT NULL ,
	country VARCHAR(50) NOT NULL ,
	city VARCHAR(50) NOT NULL ,
	neighborhood VARCHAR(50) NOT NULL ,
	street VARCHAR(100) NOT NULL,
	number INTEGER NOT NULL,
	floor INTEGER,
	door VARCHAR(10),
	telephone INTEGER,
	zip_code INTEGER,

PRIMARY KEY (dni),
FOREIGN KEY (dni) REFERENCES users ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS student (
	docket INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL ,
	dni INTEGER NOT NULL ,
password VARCHAR (100) DEFAULT 'pass',

PRIMARY KEY (docket),
FOREIGN KEY (dni) REFERENCES users ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS course (
	id INTEGER NOT NULL,
name VARCHAR(50) NOT NULL,
	credits INTEGER NOT NULL,

PRIMARY KEY (id),
CHECK (id > 0),
CHECK (credits >= 0)
);

CREATE TABLE IF NOT EXISTS inscription (
	docket INTEGER NOT NULL,
	course_id INTEGER NOT NULL,

PRIMARY KEY (docket, course_id),
FOREIGN KEY (docket) REFERENCES student ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (course_id) REFERENCES course ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS grade (
	docket INTEGER NOT NULL,
	course_id INTEGER NOT NULL ,
	grade DECIMAL(4,2) NOT NULL ,
	modified TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

PRIMARY KEY (docket, course_id, grade, modified),
FOREIGN KEY (docket) REFERENCES student ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (course_id) REFERENCES course ON DELETE RESTRICT ON UPDATE CASCADE,
CHECK (grade >= 0)
);
